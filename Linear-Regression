import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
get_ipython().magic('matplotlib inline')

df=pd.read_csv('USA_Housing.csv')

df.head()

df.info()

df.describe()

df.columns

sns.pairplot(df)

sns.distplot(df['Price'])

sns.heatmap(df.corr(),annot=True)

df.columns


x = df[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',
       'Avg. Area Number of Bedrooms', 'Area Population']]


y = df['Price']


from sklearn.cross_validation import train_test_split


X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.4, random_state=101)


from sklearn.linear_model import LinearRegression


lm = LinearRegression()

lm.fit(X_train,y_train)

print(lm.intercept_)


cdf = pd.DataFrame(lm.coef_,x.columns,columns=['Coeff'])

from sklearn.datasets import load_boston

boston = load_boston()

boston.keys()

d1 = {'row1':[1,2,3,4,5,6,7,8,9],'row2':[9,8,7,6,5,4,3,2,1]}
d2 = [[1,2,3,4,56,6],[9,8,7,6,5,4,3,2,1]]


pd.DataFrame(d2,columns=['a','b','c','d','e','f','r','t','y'])

predictions = lm.predict(X_test)

plt.scatter(y_test,predictions)

sns.distplot((y_test-predictions))


from sklearn import metrics


metrics.mean_absolute_error(y_test,predictions)


np.sqrt(metrics.mean_squared_error(y_test,predictions))




